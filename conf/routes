# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
GET         /                                    controllers.HomeController.index

# User
GET         /login                               controllers.UsersController.login
POST        /login                               controllers.UsersController.loginUser
GET         /logout                              controllers.UsersController.logout
GET         /register                            controllers.UsersController.register
POST        /register                            controllers.UsersController.createUser
GET         /users/manage/:pageNumber            controllers.UsersController.manageUser(pageNumber: Int, keyword: Option[String], pageSize: Int)
POST        /users/search                        controllers.UsersController.searchUser
GET         /user/update                         controllers.UsersController.getByEmail(email: String)
POST        /user/update                         controllers.UsersController.updateUser
POST        /user/manage/update                  controllers.UsersController.updateUserBySuperUser
GET         /user/delete                         controllers.UsersController.deleteUser(email: String)
GET         /user/forgotpassword                 controllers.UsersController.renderForgotPassword
POST        /user/forgotpassword                 controllers.UsersController.generateForgotPasswordToken
GET         /user/forgotpassword/validate        controllers.UsersController.validateForgotPasswordToken(token: String)
POST        /user/forgotpassword/reset           controllers.UsersController.resetPassword
GET         /user/changepassword                 controllers.UsersController.renderChangePassword
POST        /user/changepassword                 controllers.UsersController.changePassword

# Session
GET         /session                             controllers.SessionsController.sessions(pageNumber: Int, keyword: Option[String], pageSize: Int)
POST        /session/search                      controllers.SessionsController.searchSessions
GET         /session/manage/:pageNumber          controllers.SessionsController.manageSessions(pageNumber:Int, keyword: Option[String], pageSize: Int)
POST        /session/manage/search               controllers.SessionsController.searchManageSession
GET         /session/create                      controllers.SessionsController.create
POST        /session/create                      controllers.SessionsController.createSession
GET         /session/delete                      controllers.SessionsController.deleteSession(id: String, pageNumber:Int)
POST        /session/update                      controllers.SessionsController.updateSession
GET         /session/update                      controllers.SessionsController.update(id: String)
GET         /session/:sessionId/cancel           controllers.SessionsController.cancelScheduledSession(sessionId: String)
GET         /session/:sessionId/schedule         controllers.SessionsController.scheduleSession(sessionId: String)
GET         /session/content/:sessionId          controllers.SessionsController.shareContent(sessionId: String)
GET         /session/categories                  controllers.SessionsController.getCategory

# Feedback
GET         /feedbackform/manage/:pageNumber     controllers.FeedbackFormsController.manageFeedbackForm(pageNumber: Int)
GET         /feedbackform/create                 controllers.FeedbackFormsController.feedbackForm
POST        /feedbackform/create                 controllers.FeedbackFormsController.createFeedbackForm
GET         /feedbackform/update                 controllers.FeedbackFormsController.update(id: String)
POST        /feedbackform/update                 controllers.FeedbackFormsController.updateFeedbackForm
GET         /feedbackform/delete                 controllers.FeedbackFormsController.deleteFeedbackForm(id: String)
GET         /feedbackform/preview                controllers.FeedbackFormsController.getFeedbackFormPreview(id: String)
POST        /feedbackform/submit                 controllers.FeedbackFormsResponseController.storeFeedbackFormResponse
GET         /feedbackform/response               controllers.FeedbackFormsResponseController.getFeedbackFormsForToday
GET         /feedbackresponse/fetch              controllers.FeedbackFormsResponseController.fetchFeedbackFormResponse(id: String)
GET         /jsRoutes                            controllers.JavascriptRouter.jsRoutes

# Reports
GET         /reports/user                        controllers.FeedbackFormsReportController.renderUserFeedbackReports
GET         /reports/user/responses              controllers.FeedbackFormsReportController.fetchUserResponsesBySessionId(id: String)
GET         /reports/manage                      controllers.FeedbackFormsReportController.renderAllFeedbackReports
GET         /reports/manage/responses            controllers.FeedbackFormsReportController.fetchAllResponsesBySessionId(id: String)
GET         /reports/manage/response             controllers.FeedbackFormsReportController.searchAllResponsesBySessionId(id: String)
# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                        controllers.Assets.versioned(path="/public", file: Asset)
GET         /favicon.ico                         controllers.Assets.at(path="/public/images", file="favicon.png")

# Analysis
GET          /knolx/analysis                     controllers.KnolxAnalysisController.renderAnalysisPage
POST         /knolx/analysis/columnchart         controllers.KnolxAnalysisController.renderColumnChart
POST         /knolx/analysis/piechart            controllers.KnolxAnalysisController.renderPieChart
POST         /knolx/analysis/linechart           controllers.KnolxAnalysisController.renderLineChart
